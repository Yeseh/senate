@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.Json;
@inject IHttpClientFactory _clientFactory 

<PageTitle>Index</PageTitle>

Welcome to your new app.

<h1>Invite a user</h1>

<InputText id="email" @bind-Value="inviteUserModel.Email"/>
<button @onclick="HandleSubmit">Invite User</button>
<h2>@inviteMessage</h2>

<h1>Active Invites</h1>
<table class="table">
    <thead>
        <tr>Id</tr>
        <tr>Email</tr>
        <tr>Expiry</tr>
        <tr>Redeemed</tr>
    </thead>
    <tbody>
        @foreach (var item in activeInvites)
        {
            <tr>@item.Id</tr>
            <tr>@item.Email</tr>
            <tr>@item.Expiry</tr>
            <tr>@item.Redeemed</tr>
        }
    </tbody>
</table>

@code {
    private InviteUserModel inviteUserModel = new();

    private List<InviteModel> activeInvites = new();

    private HttpClient? _client = null;

    private string inviteMessage = string.Empty;

    private async Task HandleSubmit()
    {
        try
        {
            var response = await _client!.PostAsync($"{_client.BaseAddress}auth/user?email={inviteUserModel.Email}", null);
            inviteMessage = "Succeeded";
        }
        catch (AccessTokenNotAvailableException ex)
        {
            inviteMessage = "Error";
            ex.Redirect();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _client = _clientFactory.CreateClient("SenateAPI");
            var invitesResult = await _client!.GetAsync($"{_client.BaseAddress}auth/invites");

            if (invitesResult.IsSuccessStatusCode)
            {
                activeInvites = JsonSerializer.Deserialize<List<InviteModel>>(invitesResult.Content.ReadAsStream());
            }
        }
        catch (AccessTokenNotAvailableException ex)
        {
            inviteMessage = "Error";
            ex.Redirect();
        }
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

